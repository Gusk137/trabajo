using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace trabajo_practico
{
    class Program
    {
        public static void Main(string[] args)
        {
            menu();
            Console.ReadKey(true);
        }
        static void menu() //hacer que el menu redireccione en vez de resolver algo
        {
            el_cliente cosa_cliente = new el_cliente();
            telefonia cosa_telefonia = new telefonia();
            tecnico cosa_tecnico = new tecnico();
            combos cosa_combos = new combos();
            int valor;
            do{
            Console.WriteLine("-------------------------------");
            Console.WriteLine("Presione 1 para agregar cliente ");
            Console.WriteLine("Presione 2 para Modificar la cantidad de minutos consumidos por un cliente dado");
            Console.WriteLine("Presione 3 para Eliminar cliente de la empresa.");
            Console.WriteLine("Presione 4 para Dada un área determinada imprimir el nombre de los técnicos asignados a la misma");
            Console.WriteLine("Presione 5 para Listado de clientes");
            Console.WriteLine("Presione 6 para Agregar técnico");
            Console.WriteLine("Presione 7 para Imprimir la facturación de cada cliente en base a su plan");
            Console.WriteLine("Presione 8 para Listado de técnicos");
            Console.WriteLine("Presione 9 para salir");
            Console.WriteLine("-------------------------------");
            valor=int.Parse(Console.ReadLine());
           
                switch(valor){
                    case 1:
                    cosa_cliente.nuevo_cliente();
                    cosa_cliente.pasar_combo();
                    break;
                    case 2:
                    //cosa_telefonia.modificar(); //modificar minutos consumidos y esta relacionado con la oferta
                    
                    break;
                    case 3:
                    //cosa_telefonia.eliminar(); //eliminar cliente
                    
                    break;
                    case 4:
                    //cosa_tecnico.mostrar_tec_area(); //lista de tecnicos que hay en un area 
                    
                    break;
                    case 5:
                    //cosa_telefonia.mostrar_clientes();
                    
                    break;
                    case 6:
                     cosa_tecnico.nuevo_tecnico();
                    
                    break;
                    case 7:
                    //cosa_telefonia.facturación_cliente();
                    
                    break;
                    case 8:
                    Console.WriteLine(cosa_tecnico.tecnicoso);
                    
                    break;
                    case 9:
                    Console.WriteLine("saliendo del sistema...");
                    break;
                    default:
                    Console.WriteLine("La opcion ingresada es inexistente, por favor trate de nuevo:");
                    //valor = int.Parse(Console.ReadLine());
                    break;
            }}
            while(valor != 9);
    }
    public class el_cliente{
        //atributos
        private ArrayList un_cliente = new ArrayList();
        private int numero_cliente = 1;
        private double fact = 0;
        //metodos
        public ArrayList nuevo_cliente(){
            Console.WriteLine("ingrese su apellido: "); //posicion 0
            un_cliente.Add(Console.ReadLine());
            Console.WriteLine("ingrese su nombre: "); //posicion 1
            un_cliente.Add(Console.ReadLine());
            Console.WriteLine("ingrese su DNI: "); //posicion 2
            un_cliente.Add(Console.ReadLine());
            Console.WriteLine("ingrese la fecha en que se inscribio de esta forma dd/mm/aaaa: "); //posicion 3
            un_cliente.Add(Console.ReadLine());
            Console.WriteLine("ingrese el plan que desea: "); //posicion 4
            un_cliente.Add(Console.ReadLine());
            Console.WriteLine("ingrese el area en el que reside"); //posicion 5
            un_cliente.Add(Console.ReadLine());
            un_cliente.Add(numero_cliente); //posicion 6
            un_cliente.Add(fact); //posicion 7
            Console.WriteLine("su numero de cliente sera: {0}",numero_cliente);
            numero_cliente++;
            return un_cliente;
        }
        public void pasar_combo(){ 
            //combos algito = new combos(un_cliente);
            un_cliente.Clear(); 
            //algito.verificar_combo(); 
            //algito.pasar_tele();
            }
    }
    public class telefonia{
            private ArrayList clientes = new ArrayList();
            private ArrayList tecnicos = new ArrayList();
            
        //cosas
    }
    public class tecnico{
     public ArrayList tecnicoso = new ArrayList();
     public ArrayList nuevo_tecnico(){
     	Console.WriteLine("nombre y apellido: ");
     	tecnicoso.Add(Console.ReadLine());
     	Console.WriteLine("numero de cuil: ");
     	tecnicoso.Add(Console.ReadLine());
     	Console.WriteLine("area a trabajar: ");
     	tecnicoso.Add(Console.ReadLine());
     	return tecnicoso;
     }
    }
    public class combos{
        private DateTime oferta_tiempo = new DateTime(31/12/2022); //fecha limite de la oferta
        private ArrayList un_cli = new ArrayList();
        private ArrayList canales = new ArrayList();
        private int cant_canales;
        protected int cupos_maximos = 30;
        protected int cupos_ocupados = 0;

        private int minutos_libre;
        private double costo_minutos;
        private double precio_final;
        private ArrayList lista_promo = new ArrayList();

        //constructor
        public combos(){}
        public combos(ArrayList de_algo){ //se recibe un cliente
            un_cli = de_algo;
        }
        

        //metodos
        public void verificar_combo()
        {
            if ((int)un_cli[4] == 1)
            {
                combo1();
            }
            if ((int)un_cli[4] == 2)
            {
                combo2();
            }
            if ((int)un_cli[4] == 3)
            {
                combo3();
            }
            if ((int)un_cli[4] == 4)
            {
                combo4();
            }
        }
        public void promocion()
        {
            if (((DateTime)un_cli[3] < oferta_tiempo) && (cupos_ocupados < cupos_maximos))
            {
                cant_canales = 0;
                while (canales.Count < 121){ //se agregan los otros 121 canales
                    canales.Add(cant_canales);
                    cant_canales++;
                } //cuando termina se le agregan los 2 canales del plus haciendo un total de 123 canales
                canales.Add("pack fútbol");
                canales.Add("Disney");
                un_cli.Add(canales);
            }
            //entre el if y el else se deberia implementar el manejo de exepciones "cupos insuficientes"
            else
            {
                cant_canales = 0;
                while (canales.Count < 121){ //se agregan los 121 canales y listo
                    canales.Add(cant_canales);
                    cant_canales++;
                }
                un_cli.Add(canales);
            }
        }
        public void oferta(double consumidos, double libres)
        {
            if (consumidos < libres*0.15)
            {
                precio_final = precio_final * 0.85;
                Console.WriteLine(precio_final);
            }
        }
        public void combo1() 
        {
            //asignacion
            minutos_libre=150;
            costo_minutos=3;
            un_cli[7] = minutos_libre * costo_minutos;
            promocion();
            // hay que modificar el metodo "oferta" desde la opcion de modificar minutos consumidos
        }
        public void combo2() 
        {
            //asignacion
            minutos_libre=150;
            costo_minutos=3; //cambiar los tres
            un_cli[7] = minutos_libre * costo_minutos;
            promocion();
            // hay que modificar el metodo "oferta" desde la opcion de modificar minutos consumidos
        }
        public void combo3() 
        {
            //asignacion
            minutos_libre=150;
            costo_minutos=3; //cambiar los tres
            un_cli[7] = minutos_libre * costo_minutos;
            promocion();
            // hay que modificar el metodo "oferta" desde la opcion de modificar minutos consumidos
        }
        public void combo4() 
        {
            //asignacion
            minutos_libre=150;
            costo_minutos=3; //cambiar los tres
            un_cli[7] = minutos_libre * costo_minutos;
            promocion();
            // hay que modificar el metodo "oferta" desde la opcion de modificar minutos consumidos
        }
        public void pasar_tele(){
              //cosa_telefonia(un_cli);
              un_cli.Clear();
              //cosa_telefonia.agregar();
        }
        }
        }
    }