 using System;
using System.Collections;
using System.Linq;
using System.Runtime;

namespace trabajo_practico
{
    class Program
    {
        public static void Main(string[] args)
        {
            menu();
            Console.ReadKey(true);
        }
        static void menu(){
            int valor;
            Console.WriteLine("Presione 1 para agregar cliente ");
            Console.WriteLine("Presione 2 para Modificar la cantidad de minutos consumidos por un cliente dado");
            Console.WriteLine("Presione 3 para Eliminar cliente de la empresa.");
            Console.WriteLine("Presione 4 para Dada un área determinada imprimir el nombre de los técnicos asignados a la misma");
            Console.WriteLine("Presione 5 para Listado de clientes");
            Console.WriteLine("Presione 6 para Agregar técnico");
            Console.WriteLine("Presione 7 para Imprimir la facturación de cada cliente en base a su plan");
            Console.WriteLine("Presione 8 para Listado de técnicos");
            Console.WriteLine("Presione 9 para que el programa termine");
            valor=int.Parse(Console.ReadLine());
            while(valor != 9)
            {
                switch(valor){
                    case 1:            
                        ArrayList cliente = new ArrayList();
                        Console.WriteLine("si desea ingresar otro usuario ponga si, en caso contrario ponrga no: ");
                        string a = Console.ReadLine();
                        do
                        {
                            
                            Console.WriteLine("ingrese su numero de cliente: ");
                            cliente[0] = Console.ReadLine();
                            Console.WriteLine("ingrese su apellido: ");
                            cliente[1] = Console.ReadLine();
                            Console.WriteLine("ingrese su nombre: ");
                            cliente[2] = Console.ReadLine();
                            Console.WriteLine("ingrese su DNI: ");
                            cliente[3] = Console.ReadLine();
                            Console.WriteLine("ingrese la fecha en que se inscribio de esta forma dd/mm/aaaa: ");
                            cliente[4] = Console.ReadLine();
                            Console.WriteLine("ingrese el plan que desea: ");
                            cliente[5] = Console.ReadLine();
                            Combos b = new Combos(cliente);
                            b.agregar();
                        }
                        while(a != "no");
                        {
                            Console.WriteLine("ingrese su numero de cliente: ");
                            cliente[0] = Console.ReadLine();
                            Console.WriteLine("ingrese su apellido: ");
                            cliente[1] = Console.ReadLine();
                            Console.WriteLine("ingrese su nombre: ");
                            cliente[2] = Console.ReadLine();
                            Console.WriteLine("ingrese su DNI: ");
                            cliente[3] = Console.ReadLine();
                            Console.WriteLine("ingrese la fecha en que se inscribio de esta forma dd/mm/aaaa : ");
                            cliente[4] = Console.ReadLine();
                            Console.WriteLine("ingrese el plan que desea: ");
                            cliente[5] = Console.ReadLine();
                            Combos c = new Combos(cliente);
                            c.agregar();
                            Console.WriteLine("si desea ingresar otro usuario ponga si, en caso contrario ponrga no: ");
                            a = Console.ReadLine();
                        }
                        break;
                    case 2:
                        break;
                    case 3:
                        break;
                    case 4:
                        break;
                    case 5:
                        break;
                    case 6:
                        break;
                    case 7:
                        break;
                    case 8:
                        break;
                    default:
                        Console.WriteLine("La opcion ingresada es inexistente, por favor trate de nuevo:");
                        valor = int.Parse(Console.ReadLine());
                        break;
                }
            }
            if (valor == 9){
                Console.WriteLine("El programa se cerrara de inmediato.");
            }
            menu();
            valor=int.Parse(Console.ReadLine());
        }
    }
    public class Combos{
        private DateTime oferta_tiempo= new DateTime(31/12/2022); //fecha limite de la oferta
        private ArrayList lista_clientes = new ArrayList(); //se agregan todos los clientes
        private ArrayList clientexd = new ArrayList();
        private int posi = 0; //contador para agregar clientes
        protected DateTime fecha_usuario; //se recibe la fecha que ingresa el usuario para despues comparar
        protected int cupos_maximos = 30;
        protected int [] cantidad_canales = new int [121]; //la lista con los nombre de los canales
        
        public Combos(){} //constructor
        public Combos (ArrayList cli){
            clientexd = cli;
        }
        public Combos (DateTime fecha_usuario){ //constructor
            this.fecha_usuario = fecha_usuario;
        }
        public DateTime FECHA_USUARIO{ //propiedades
            set{ fecha_usuario = value; }
        }
        public ArrayList confirmar{
            set{
                clientexd = value;
            }
        }
        public void agregar(){
            lista_clientes[posi] = clientexd;
            posi++;
        }
    }
    
    public class combo1 : Combos{
        private int minutos_libre=150;
        private double costo_minutos=3;
        private double precio_final=450;
        private ArrayList lista_promo = new ArrayList();
        private DateTime f_u;

        public combo1(DateTime fecha_usu) : base(fecha_usu)
        { //constructor
            f_u = fecha_usu;
        }
        public void promocion(DateTime oferta, DateTime usuario, ArrayList cantidad_canales){
            if ((usuario < oferta)&&(cupos_maximos < 31))//las 2 posibilidades para entrar en la promo
            { 
                lista_promo.AddRange(cantidad_canales);
                lista_promo.Add("pack fútbol");
                lista_promo.Add("Disney");
                
            }
        }
        public void oferta(double    consumidos, double libres){
            if (consumidos < libres*0.15){
                precio_final = precio_final * 0.85;
                Console.WriteLine(precio_final);
            }
        }
    }
    
    public class combo2 : Combos{
        private int minutos_libre=170;
        private double costo_minutos=2;
        private double precio_final=340;
        private ArrayList lista_promo = new ArrayList();
        private DateTime f_u;
        
        public combo2(DateTime fecha_usu) : base(fecha_usu){ //constructor
            f_u = fecha_usu;
        }
        public void promocion(DateTime oferta, DateTime usuario, ArrayList cantidad_canales){
            if ((usuario < oferta) && (cupos_maximos < 31)){ //las 2 posibilidades para entrar en la promo
                lista_promo.AddRange(cantidad_canales);
                lista_promo.Add("pack fútbol");
                lista_promo.Add("Disney");
                
                
            }
        }
        public void oferta(double consumidos, double libres){
            if (consumidos < libres*0.15){
                precio_final = precio_final * 0.85;
                Console.WriteLine(precio_final);
                }
            }
        }
    
    public class combo3 : Combos{
        private int minutos_libre=125;
        private double costo_minutos=4;
        private double precio_final=500;
        private ArrayList lista_promo = new ArrayList();
        private DateTime f_u;
        
        public combo3(DateTime fecha_usu) : base(fecha_usu){ //constructor
            f_u = fecha_usu;
        }
        public void promocion(DateTime oferta, DateTime usuario, ArrayList cantidad_canales){
            if ((usuario < oferta) && (cupos_maximos < 31)){ //las 2 posibilidades para entrar en la promo
                lista_promo.AddRange(cantidad_canales);
                lista_promo.Add("pack fútbol");
                lista_promo.Add("Disney");
                
            }
        }
        public void oferta(double consumidos, double libres){
            if (consumidos < libres*0.15){
                precio_final = precio_final * 0.85;
                Console.WriteLine(precio_final);
                }
            }
        }
    
    public class combo4 : Combos{
        private int minutos_libre=200;
        private double costo_minutos=1.5;
        private double precio_final=300;
        private ArrayList lista_promo = new ArrayList();
        private DateTime f_u;
        
        public combo4(DateTime fecha_usu) : base(fecha_usu){ //constructor
            f_u = fecha_usu;
        }
        public void promocion(DateTime oferta, DateTime usuario, ArrayList cantidad_canales){
            if ((usuario < oferta) && (cupos_maximos < 31)){ //las 2 posibilidades para entrar en la promo
                lista_promo.AddRange(cantidad_canales);
                lista_promo.Add("pack fútbol");
                lista_promo.Add("Disney");
                
            }
        }
        public void oferta(double consumidos, double libres){
            if (consumidos < libres*0.15){
                precio_final = precio_final * 0.85;
                Console.WriteLine(precio_final);
                }
            }
        }
}   
