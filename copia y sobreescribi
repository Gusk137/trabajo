using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace trabajo_practico
{
    class Program
    {
        public static void Main(string[] args)
        {
            menu();
            Console.ReadKey(true);
        }
        static void menu() //hacer que el menu redireccione en vez de resolver algo
        {
            el_cliente cosa_cliente = new el_cliente();
            telefonia cosa_telefonia = new telefonia();
            tecnico cosa_tecnico = new tecnico();
            combos cosa_combos = new combos();
            int valor;
            do{
            Console.WriteLine("-------------------------------");
            Console.WriteLine("Presione 1 para agregar cliente ");
            Console.WriteLine("Presione 2 para Modificar la cantidad de minutos consumidos por un cliente dado");
            Console.WriteLine("Presione 3 para Eliminar cliente de la empresa.");
            Console.WriteLine("Presione 4 para Dada un área determinada imprimir el nombre de los técnicos asignados a la misma");
            Console.WriteLine("Presione 5 para Listado de clientes");
            Console.WriteLine("Presione 6 para Agregar técnico");
            Console.WriteLine("Presione 7 para Imprimir la facturación de cada cliente en base a su plan");
            Console.WriteLine("Presione 8 para Listado de técnicos");
            Console.WriteLine("Presione 9 para salir");
            Console.WriteLine("-------------------------------");
            valor=int.Parse(Console.ReadLine());
                switch(valor){
                    case 1:
                    cosa_cliente.nuevo_cliente();
                    cosa_cliente.pasar_combo();
                    break;

                    case 2:
                    cosa_telefonia.modificar(); //modificar minutos consumidos y esta relacionado con la oferta
                    break;

                    case 3:
                    cosa_telefonia.eliminar(); //eliminar cliente
                    break;

                    case 4:
                    cosa_tecnico.mostrar_tec_area(); //lista de tecnicos que hay en un area 
                    break;

                    case 5:
                    cosa_telefonia.mostrar_clientes();
                    break;

                    case 6:
                    cosa_tecnico.nuevo_tecnico();
                    break;

                    case 7:
                    cosa_telefonia.facturación_cliente();
                    break;

                    case 8:
                    Console.WriteLine(cosa_tecnico.tecnicoso);
                    break;

                    case 9:
                    Console.WriteLine("saliendo del sistema...");
                    break;

                    default:
                    Console.WriteLine("La opcion ingresada es inexistente, por favor trate de nuevo:");
                    valor = int.Parse(Console.ReadLine());
                    break;
                }
            }
            while(valor != 9);
        }
    public class el_cliente
    {
        //atributos
        private ArrayList un_cliente = new ArrayList();
        private int numero_cliente = 1;
        private double fact = 0;
        //metodos
        public ArrayList nuevo_cliente(){
            Console.WriteLine("ingrese su apellido: "); //posicion 0
            un_cliente.Add(Console.ReadLine());
            Console.WriteLine("ingrese su nombre: "); //posicion 1
            un_cliente.Add(Console.ReadLine());
            Console.WriteLine("ingrese su DNI: "); //posicion 2
            un_cliente.Add(Console.ReadLine());
            Console.WriteLine("ingrese la fecha en que se inscribio de esta forma dd/mm/aaaa: "); //posicion 3
            string fechita = Console.ReadLine(); 
            string [] fecha = fechita.Split(new char [] {'/'});
            int dia,mes,ano;
            dia = int.Parse(fecha[0]);
            mes = int.Parse(fecha[1]);
            ano = int.Parse(fecha[2]);
            DateTime fechaUsuario = new DateTime(ano,mes,dia);
            un_cliente.Add(fechaUsuario);
            Console.WriteLine("ingrese el plan que desea: "); //posicion 4
            un_cliente.Add(Console.ReadLine());
            Console.WriteLine("ingrese el area en el que reside"); //posicion 5
            un_cliente.Add(Console.ReadLine());
            un_cliente.Add(numero_cliente); //posicion 6
            un_cliente.Add(fact); //posicion 7
            Console.WriteLine("su numero de cliente sera: {0}",numero_cliente);
            numero_cliente++;
            return un_cliente;
        }
        public void pasar_combo(){ 
            combos algito = new combos(un_cliente);
            un_cliente.Clear(); 
            algito.verificar_combo(); 
            algito.pasar_tele();
            }
    }
    public class telefonia{
        //atributos
        private ArrayList clientes = new ArrayList();
        private ArrayList tecnicos = new ArrayList();
        //constructores
        public telefonia(){}
        public telefonia(ArrayList tec, int firma)
        {
            tecnicos = tec;
        }
        public telefonia(ArrayList clin)
        {
            clientes = clin;
        }
        //metodos
        public void asignar_tecnico(){}
        public void facturacion(){}
        public void cambiar_minutos_consumidos(){}
        public void listaClientes(){}
        public void listaTecnicos(){}
        public void listaTecnicosArea(){}
        public void eliminar_cliente(){}
    public class tecnico{
        public ArrayList tecnicoso = new ArrayList();
        public ArrayList nuevo_tecnico(){
            Console.WriteLine("nombre y apellido: ");
     	    tecnicoso.Add(Console.ReadLine()); // posicion 0
     	    Console.WriteLine("numero de cuil: ");
     	    tecnicoso.Add(Console.ReadLine()); // posicion 1
     	    Console.WriteLine("area a trabajar: ");
     	    tecnicoso.Add(Console.ReadLine()); // posicion 2
     	    return tecnicoso;
            }
        public void pasar_tecnico(){
            telefonia cosa_tecnico3 = new telefonia(tecnicoso,1); //telefonia sabe que recibe un solo tecnico
            tecnicoso.Clear();
        }
    }
    public class combos{
        private DateTime oferta_tiempo = new DateTime(2022/12/31); //fecha limite de la oferta
        private ArrayList un_cli = new ArrayList();
        private ArrayList canales = new ArrayList();
        private int cant_canales;
        protected int cupos_maximos = 30;
        protected int cupos_ocupados = 0;

        private int minutos_libre;
        private double costo_minutos;
        private double precio_final;
        private ArrayList lista_promo = new ArrayList();

        //constructor
        public combos(){}
        public combos(ArrayList de_algo){ //se recibe un cliente
            un_cli = de_algo;
        }
        //metodos
        public void verificar_combo()
        {
            if ((int)un_cli[4] == 1)
            {
                combo1();
            }
            if ((int)un_cli[4] == 2)
            {
                combo2();
            }
            if ((int)un_cli[4] == 3)
            {
                combo3();
            }
            if ((int)un_cli[4] == 4)
            {
                combo4();
            }
        }
        protected arraylist promocion() //si no me equivoco en promocion se hace la lista de canales, esa lista la tenemos que agregar al cliente despues con un metodo
        {
            if (un_cli[3] < oferta_tiempo)
            {
                if (cupos_ocupados < cupos_maximos) // aca hacemos el try y el catch y despues el hacemos el throw de "cupos insufisientes"
                {
                    console.WriteLine("usted cumple con los requisitos recibir el pack futbol y el de Disney sin un cargo extra.")
                    cant_canales = 0;
                    while (canales.count < 121) //capaz le pifie y capaz se agregen 122 canales, despues que alguienlo verifique xd
                    { 
                        canales.add(cosito); //se agregan los otros 121 canales
                        cosito++;
                    } //cuando termina se le agregan los 2 canales del plus haciendo un total de 123 canales
                    canales.Add("pack fútbol");
                    canales.Add("Disney");
                }
            }
            else //si ninguna de las dos condiciones se cumplen hay que preguntar si quiere suscribirse igual
            {
                console.WriteLine("¿quiere suscribirse a este combo de todas formas? Ponga si o no respectivamente: ");
                confirmacion = console.ReadLine();
                if (confirmacion == "si")
                {
                    cant_canales = 0;
                    while (canales.count < 121
                    { 
                        canales.add(cosito); //se agregan los 121 canales y listo
                        cosito++;
                    }
                }
                if (confirmacion == "no")
                {
                    Console.WriteLine("¿desea suscribirse a otro combo? Ponga si o no respectivamente: ");
                    confi_combo = Console.ReadLine();
                    if (confi_combo == "si")
                    {
                        console.WriteLine("ingrese cual de los 4 combos desea: ");
                        un_cli[4] = Console.ReadLine();
                        switch(un_cli[4]){
                            case 1:
                            verificar_combo();
                            break;
                            case 2:
                            verificar_combo();
                            break;
                            case 3:
                            verificar_combo();
                            break;
                            case 4:
                            verificar_combo();
                            break;
                            default:
                            Console.WriteLine("el combo ingresado es inexistente, por favor trate de nuevo: ")
                            un_cli[4] = Console.ReadLine();
                        }
                    }
                    if (confi_combo == "no")
                    {
                        console.WriteLine("abueno adios master") //cambiar esto :)
                        un_cli.Clear();
                    }
                    else
                    {
                        console.WriteLine("la palabra ingresada no corresponde, por favor intente de nuevo: ")
                        confi_combo = console.ReadLine();
                    }
                }
            }
            return canales;
        }
        public void oferta(double consumidos) // la oferta se hace cuando se modifican los minutos consumidos
        {
            if (consumidos < libres*0.15)
            {
                precio_final = precio_final * 0.85;
                Console.WriteLine("su precio con el descuento es {0}",precio_final);
            }
        }
        public void combo1() 
        {
            //asignacion
            minutos_libre=150;
            costo_minutos=3;
            un_cli[7] = minutos_libre * costo_minutos;
            promocion();
            // hay que modificar el metodo "oferta" desde la opcion de modificar minutos consumidos
        }
        public void combo2() 
        {
            //asignacion
            minutos_libre=150;
            costo_minutos=3; //cambiar los tres
            un_cli[7] = minutos_libre * costo_minutos;
            promocion();
            // hay que modificar el metodo "oferta" desde la opcion de modificar minutos consumidos
        }
        public void combo3() 
        {
            //asignacion
            minutos_libre=150;
            costo_minutos=3; //cambiar los tres
            un_cli[7] = minutos_libre * costo_minutos;
            promocion();
            // hay que modificar el metodo "oferta" desde la opcion de modificar minutos consumidos
        }
        public void combo4() 
        {
            //asignacion
            minutos_libre=150;
            costo_minutos=3; //cambiar los tres
            un_cli[7] = minutos_libre * costo_minutos;
            promocion();
            // hay que modificar el metodo "oferta" desde la opcion de modificar minutos consumidos
        }
        public void pasar_tele()
        {
            telefonia cosa_telefonia1 = new telefonia(un_cli) //telefonia sabe que recibe un cliente con su combo
            un_cli.Clear();
            cosa_telefonia1.agregar();
        }
        }
    }
}
